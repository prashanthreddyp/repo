1 + 1
None
vim hello.py
exit
exit()
1 < 2
0 > 2
2 == 1
2 ! = 1
1 == 1
1 != 1
2 != 1
3.0 <= 3.0
3.1 <= 3.0
3.1 <= "this"
3 <= 3.1
1.1 == "1.1"
1.1 == float("1.1")
"this" = "this"
"this" == "this"
"this" == "This"
"d" > "a"
"abc" < "b"
2 in [1, 2, 3]
4 in [1, 2, 3]
2 not in [1, 2, 3]
4 not in [1, 2, 3]
if True:
    print("was True")
if False:
    print("was True")
if False:
    print("was False")
if False:
    print("was True")
else:
    print("was False"
    print("was False")
if False:
    peint("was Ture")
else:
    print("was False")
name = "prashanthreddy"
if len(name) >= 15:
   print("name is long")
elif len(name) == 14:
    print("name is 14 characters")
elif len(name) == 10:
    print("name is 10 or more")
else:
    print("name is short")
while True:
    print("looping")
count =1
while count <= 10:
    print("looping")
    count += 1
count = 10
while count < 100:
    if count % 2 == 0:
        count += 1
        continue
    print(f"we're counting odd number: {count}")
    count +=1
count =1
while count < 10:
    if count % 2 ==0:
        break
    print(f"we're counting odd number: {count}")
    count += 1
colors = ['prashanth', 'reddy', 'prashu',]
for color in colors:
    print("colors")
names = ["prashanth", "reddy", "prashu",]
if name in names:
    print("name")
names = ["prashanth", "reddy", "prashu",]
for name in names:
   print("name")
   print(name)
names = ["prashanth", "reddy", "prashu",]
for name in names:
    print(name)
names =["prashant", "manikreddy", "suvrani", "swathi"]
for name in names:
   if name == "prashanth":
         continue
   elif color == "suvrani"
names =["prashant", "manikreddy", "suvrani", "swathi"]
for name in names:
   if name == "prashanth":
        continye
    esif name == "suvrani":
names =["prashant", "manikreddy", "suvrani", "swathi"]
for name in names:
   if name == "prashanth":
       continue
    elif name == "suvrani":
names =["prashant", "manikreddy", "suvrani", "swathi"]
for name in names:
    if name == "prashant":
        continue
    elif name == "suvrani":
        break
    print(name)
ages = {"kevin": 59, "bob": 36, "reddy": 24}
for key in ages:
    print(age)
ages = {"kevin": 59, "bob": 36, "reddy": 24}
for key in ages:
    print(key)
list_0f_points = [(1, 2), (2, 3), (4, 5)]
for x, y in list_of_point:
    print(x, y)
list_0f_points = [(1, 2), (2, 3), (4, 5)]
for x, y in list_of_points:
    print(f"x: {x}, y: {y}")
for name,age in ages.items():
    print(f"person named: {named}")
    print(f"Person named: {named}")
    print(f"Age of: {age}")
for name, age in ages.items():
    print(f"Person Named: {name}")
    print(f"Age of: {age}")
ls
exit
exit()
chmod u+x bin/age
exit()
def hello_world():
    print("Hello, World!")
hello world
hello_world()
def print_name(name):
   print(f"Name is {name}")
print_name("prashant")
output = print_name("prashant")
output
def add_two(num):
    return num + 2
result == add_two(2)
result
def add_two(num):
    return num + 2
result = add_two(2)
result
exit()
import time
now = time.localtime()
now
now.tm_hour
exit()
xmen_file = open("xmen_base.txt", "r")
xmen_file
xmen_file.read()
xmen_file.seek(0)
xmen_file.read()
xmen_file.seek(6)
xmen_file.read()
xmen_file.seek(0)
for line in xmen_file:
    print(line, end="")
xmen_file.close()
xmen_file.read()
xmen_base = open("xmen_base.txt")
new_xmen = open("new_xmen.txt", "w")
new_xmen.write(xmen_base.read())
new_xmen.close()
new_base = open(new_xmen.name, "r+")
new_base.read()
new_xmen.seek(0)
new_xmen.write("beast\n")
new_xmen.read()
xmen_file.close()
with open("xmen_base.txt", "a")
With open("xmen_base.txt", "a") as f:
With open ("xmen_base.txt", "a") as f:
With open("xmen_base.txt", "a") as f:
xmen_file.close()
With open("xmen_base.txt", "a") as f:
With open(xmen_base.txt, "a") as f:
With open( "xmen_base.txt", "a") as f:
cat xmen_base.txt
new_xmen.write(xmen_base.read())
exit()
xmen_file = open("xmen_base.txt", "r")
xmen_file
xmen_file.read()
xmen_file.seek(0)
xmen_file.read()
xmen_file.seek(6)
xmen_file.read()
men_file.seek(0)
xmen_file.seek(0)
for line in xmen_file:
    print(line, end="")
xmen_file.close()
xmen_file.read()
xmen_base = open("xmen_base.txt")
new_xmen = open("new_xmen.txt", "w")
new_xmen.write(xmen_base.read())
new_xmen.close()
new_xmen = open(new_xmen.name, "r+")
new_xmen.read()
new_xmen.seek(0)
new_xmen.write("Beast\n")
new_xmen.seek()
new_xmen.write(Phoenix\n")
new_xmen.read()
xmen_file.close()
With open("xmen_base.txt", "a") as f:
with open("xmen_base.txt", "a") as f:
    f.write("Proffessor Xavier\n")
exit()
import subprocess
proc = subprocess.run(["ls", "-l"])
proc
proc = subprocess.run(
    ["ls", "-l"],
    stdout=subprocess.PIPE,
    stderr=subprocess.PIPE,
)
proc
proc.stdout
print(proc.stdout)
print(proc.stdout.decode())
new_proc = subprocess.run(["cat", "fake.txt"])
new_proc
error_proc = subprocess.run(["cat", "fake.txt"], check=true)
exit()
import math
def ftruncate(f, ndigits=None):
    if ndigits and (ndigits > 0):
    num = math.floor(f * multiplier) / multiplier
import math
def ftruncate(f, ndigits=None):
    if ndigits and (ndigits > 0):
        multiplier = 10 ** ndigits
        num = math.floor(f * multiplier) / multiplier
    else:
        num = math.floor(f)
    return num
num = 1.5441020468646993
ftruncate(num)
ftruncate(num, 2)
ftruncate(num, 9)
exit()
import glob
receipts = glob.glob("./new/receipt-[0-9]*[24680].json")
receipts
import re
re.match("./new/receipt-[0-9]*[24680].json", "./new/receipt-2.json")
bool(re.match("./new/receipt-[0-9]*json", "./new/receipt-2.json"))
bool(re.match("./new/receipt-[0-9]*[24680].json", "./new/receipt-2.json"))
receipts = [f for f in glob.iglob("./new/receipt-[0-9]*.json") if re.match("./new/receipt-[0-9]*[2680].json", f_)]
receipts = [f for f in glob.iglob("./new/receipt-[0-9]*.json") if re.match("./new/receipt-[0-9]*[2680].json", f)]
exit
exit()
ewxit()
exit()
import math
def ftuncate(f, ndigits=None):
    if ndigits and (ndigits > 0):
        multiplier = 10 ** ndigits
        num = math.floor(f * multiplier) / multiplier
    else:
        num = math.floor(f)
    return num
num = 1.544102046864
ftruncate(num, 3)
ftruncate(num)
num = 1.5441020468646993
ftruncate(num)
ftuncate(num)
ftuncate(num, 9)
ftuncate(num, 55)
exit()
